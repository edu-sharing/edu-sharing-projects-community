<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.edu_sharing</groupId>
    <artifactId>edu_sharing-projects-community-deploy-docker</artifactId>
    <version>git</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>edu_sharing-projects-community-deploy-docker-compose</artifactId>
  <packaging>jar</packaging>

  <name>edu_sharing-projects-community-deploy-docker-compose</name>

  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>services</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <includeArtifactIds>
                edu_sharing-community-services-rendering-deploy-docker-compose,
                edu_sharing-community-services-connector-deploy-docker-compose
              </includeArtifactIds>
              <excludes>META-INF/**</excludes>
              <outputDirectory>${project.build.directory}/compose</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>repository</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <includeArtifactIds>
                edu_sharing-community-repository-deploy-docker-compose,
                edu_sharing-community-repository-plugin-elastic-deploy-docker-compose,
                edu_sharing-community-repository-plugin-mongo-deploy-docker-compose,
                edu_sharing-community-repository-plugin-kafka-deploy-docker-compose,
                edu_sharing-enterprise-repository-plugin-antivirus-deploy-docker-compose,
                edu_sharing-enterprise-repository-plugin-cluster-deploy-docker-compose,
                edu_sharing-enterprise-repository-plugin-remote-deploy-docker-compose,
                edu_sharing-enterprise-repository-plugin-transform-deploy-docker-compose
              </includeArtifactIds>
              <excludes>META-INF/**</excludes>
              <outputDirectory>${project.build.directory}/compose</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>compose</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/compose</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/compose</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>scripts</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/edu-sharing</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/compose</directory>
                  <excludes>
                    <exclude>*.yml</exclude>
                  </excludes>
                </resource>
                <resource>
                  <directory>src/main/scripts</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.edu_sharing.maven.plugins</groupId>
        <artifactId>docker-compose-config-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>runtime</id>
            <phase>package</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}/compose</directory>
                  <includes>
                    <include>*-common.yml</include>
                  </includes>
                </fileSet>
                <fileSet>
                  <directory>${project.build.directory}/compose</directory>
                  <includes>
                    <include>*-remote.yml</include>
                  </includes>
                </fileSet>
                <fileSet>
                  <directory>${project.build.directory}/compose</directory>
                  <includes>
                    <include>*-productive.yml</include>
                  </includes>
                </fileSet>
              </fileSets>
              <outputDirectory>${project.build.directory}/edu-sharing</outputDirectory>
              <finalName>docker-compose.yml</finalName>
            </configuration>
          </execution>

          <execution>
            <id>debug</id>
            <phase>package</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}/compose</directory>
                  <includes>
                    <include>*-debug.yml</include>
                  </includes>
                </fileSet>
              </fileSets>
              <outputDirectory>${project.build.directory}/edu-sharing</outputDirectory>
              <finalName>docker-compose.debug.yml</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <classesDirectory>${project.build.directory}/edu-sharing</classesDirectory>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>single</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/bin.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <profiles>

    <profile>

      <id>repository.antivirus</id>

      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.REPOSITORY_ANTIVIRUS_ENABLED</name>
          <value>true</value>
        </property>
      </activation>

      <dependencies>

        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>edu_sharing-enterprise-repository-plugin-antivirus-deploy-docker-compose</artifactId>
        </dependency>

      </dependencies>

    </profile>

    <profile>

      <id>repository.cluster</id>

      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.REPOSITORY_CLUSTER_ENABLED</name>
          <value>true</value>
        </property>
      </activation>

      <dependencies>

        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>edu_sharing-enterprise-repository-plugin-cluster-deploy-docker-compose</artifactId>
        </dependency>

      </dependencies>

    </profile>

    <profile>

      <id>repository.elastic</id>

      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.REPOSITORY_ELASTIC_ENABLED</name>
          <value>true</value>
        </property>
      </activation>

      <dependencies>

        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>edu_sharing-community-repository-plugin-elastic-deploy-docker-compose</artifactId>
        </dependency>

      </dependencies>

    </profile>

    <profile>

      <id>repository.kafka</id>

      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.REPOSITORY_KAFKA_ENABLED</name>
          <value>true</value>
        </property>
      </activation>

      <dependencies>

        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>edu_sharing-community-repository-plugin-kafka-deploy-docker-compose</artifactId>
        </dependency>

      </dependencies>

    </profile>

    <profile>

      <id>repository.mongo</id>

      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.REPOSITORY_MONGO_ENABLED</name>
          <value>true</value>
        </property>
      </activation>

      <dependencies>

        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>edu_sharing-community-repository-plugin-mongo-deploy-docker-compose</artifactId>
        </dependency>

      </dependencies>

    </profile>

    <profile>

      <id>repository.remote</id>

      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.REPOSITORY_REMOTE_ENABLED</name>
          <value>true</value>
        </property>
      </activation>

      <dependencies>

        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>edu_sharing-enterprise-repository-plugin-remote-deploy-docker-compose</artifactId>
        </dependency>

      </dependencies>

    </profile>

    <profile>

      <id>repository.transform</id>

      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.REPOSITORY_TRANSFORM_ENABLED</name>
          <value>true</value>
        </property>
      </activation>

      <dependencies>

        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>edu_sharing-enterprise-repository-plugin-transform-deploy-docker-compose</artifactId>
        </dependency>

      </dependencies>

    </profile>

    <profile>

      <id>service.connector</id>

      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.SERVICE_CONNECTOR_ENABLED</name>
          <value>true</value>
        </property>
      </activation>

      <dependencies>

        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>edu_sharing-community-services-connector-deploy-docker-compose</artifactId>
        </dependency>

      </dependencies>

    </profile>

  </profiles>

  <dependencies>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>edu_sharing-community-repository-deploy-docker-compose</artifactId>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>edu_sharing-community-services-rendering-deploy-docker-compose</artifactId>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>edu_sharing-community-repository-backend-alfresco-module</artifactId>
      <type>amp</type>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>edu_sharing-community-repository-backend-services-common</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>edu_sharing-community-repository-backend-services-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>edu_sharing-community-repository-backend-services-rest-client-java</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>edu_sharing-community-repository-backend-services-graphql-server</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>edu_sharing-community-repository-backend-services-xoai</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>edu_sharing-projects-community-repository-backend-alfresco-module</artifactId>
      <type>amp</type>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>edu_sharing-projects-community-repository-backend-services-core</artifactId>
      <scope>provided</scope>
    </dependency>

  </dependencies>

</project>
