variables:
  COMMON_BIND_HOST: "0.0.0.0"
  DEPLOY_DOCKER_HELM: "true"
  DEPLOY_TIMESTAMP: "$DEPLOY_TIMESTAMP"
  DOCKER_DRIVER: "$DIND_DRIVER"
  DOCKER_HOST: "$DIND_HOST"
  DOCKER_TLS_CERTDIR: "$DIND_TLS_CERTDIR"
  MAVEN_HOME: "/builds/$CI_PROJECT_PATH/mnt/.m2"
  MAVEN_CLI: "-Ddocker.registry=$DOCKER_REGISTRY -Dhelm.deploy.url=$HELM_REGISTRY -Dhelm.deploy.type=$HELM_TYPE -Dmaven.deploy.releases=$MAVEN_DEPLOY_RELEASES -Dmaven.deploy.snapshots=$MAVEN_DEPLOY_SNAPSHOTS --batch-mode --errors --fail-fast --show-version"
  MAVEN_OPTS: "-Dmaven.repo.local=/builds/$CI_PROJECT_PATH/mnt/.m2/repository"
  REPOSITORY_ANTIVIRUS_ENABLED: "false"
  REPOSITORY_CLUSTER_ENABLED: "false"
  REPOSITORY_ELASTIC_ENABLED: "true"
  REPOSITORY_KAFKA_ENABLED: "false"
  REPOSITORY_MONGO_ENABLED: "false"
  REPOSITORY_REMOTE_ENABLED: "false"
  REPOSITORY_TRANSFORM_ENABLED: "false"
  SERVICE_CONNECTOR_ENABLED: "false"

default:
  image: maven:3.9.2-amazoncorretto-17-debian-bullseye
  services:
    - name: "$DIND_IMAGE"
      alias: docker
      entrypoint: [ "env", "-u", "DOCKER_HOST" ]
      command: [ "dockerd-entrypoint.sh" ]

stages:
  - deploy

deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^maven\/release\/.*/ && $CI_PIPELINE_SOURCE == "pipeline"
    - if: $CI_COMMIT_TAG && $CI_PIPELINE_SOURCE == "pipeline"
    - if: $CI_COMMIT_BRANCH !~ /^maven\/release\/.*/ && $CI_COMMIT_TAG == null
  before_script:
    - apt-get update -y
    - apt-get install -y php php-curl php-dom php-gd php-mbstring php-xml php-zip wget git
    - pushd /tmp
    - wget https://get.helm.sh/helm-v3.14.2-linux-amd64.tar.gz
    - tar -xzvf helm-v3.14.2-linux-amd64.tar.gz
    - ./linux-amd64/helm repo add edu-sharing https://artifacts.edu-sharing.com/repository/helm
    - popd
  script:
    - mvn $MAVEN_CLI -s .mvn/settings.xml deploy